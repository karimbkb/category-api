plugins {
    id "jacoco"
    id "io.freefair.lombok" version "5.2.1"
    id "com.github.johnrengelman.shadow" version "6.0.0"
    id "io.micronaut.application" version '1.0.5'
    id 'com.github.sherter.google-java-format' version '0.9'
}

version "0.1"
group "de.karimbkb.categoryapi"

repositories {
    mavenCentral()
    jcenter()
}

micronaut {
    runtime "netty"
    testRuntime "junit5"
    processing {
        incremental true
        annotations "de.karimbkb.categoryapi.*"
    }
}

dependencies {
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")
    annotationProcessor("org.projectlombok:lombok")
    implementation("io.micronaut.mongodb:micronaut-mongo-sync")
    testCompile("org.testcontainers:mongodb:1.15.2")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    testCompile "org.testcontainers:testcontainers:1.15.2"
    testImplementation("org.testcontainers:junit-jupiter:1.15.2")
    testImplementation "org.mockito:mockito-junit-jupiter:3.5.10"
    annotationProcessor "io.micronaut.configuration:micronaut-openapi"
    implementation "io.swagger.core.v3:swagger-annotations"

}

mainClassName = "de.karimbkb.categoryapi.Application"
java {
    sourceCompatibility = JavaVersion.toVersion('11')
    targetCompatibility = JavaVersion.toVersion('11')
}

// use JUnit 5 platform
test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

googleJavaFormat {
    exclude 'src/test/*'
}

verifyGoogleJavaFormat {
    exclude 'src/test/*'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/Application**'
            ])
        }))
    }
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=rapidoc.enabled=true,swagger-ui.enabled=true,swagger-ui.theme=flattop'
}

compileJava.dependsOn tasks.googleJavaFormat



